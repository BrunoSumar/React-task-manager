{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c954981f.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n    return (\n        <button\n          onClick={onClick}\n          style={{backgroundColor: color}}\n          className='btn'\n        >\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    text: 'button',\n    color: 'black',\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\nconst Header = ({title, onAdd, showAdd}) => {\n    return (\n        <div className='header'>\n          <h1>{title}</h1>\n          <Button\n            color='green'\n            text={showAdd? 'Fechar':'Adicionar'}\n            onClick={onAdd}\n          />\n        </div>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Lista de tarefas',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string,\n}\n\nexport default Header\n","import {FaTimes} from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div\n          className={!task.reminder? 'task':'task reminder'}\n          onDoubleClick={()=>onToggle(task.id)}\n        >\n          <h3>\n            {task.text}\n            <FaTimes\n              style={{color:'red'}}\n              onClick={() => onDelete(task.id)}\n            />\n          </h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n          {\n              tasks.map((task) => (\n                  <Task\n                    key={task.id}\n                    task={task}\n                    onDelete={onDelete}\n                    onToggle={onToggle}\n                  />\n              ))\n          }\n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n      e.preventDefault()\n      if(!text){\n        alert('Por favor preencha o nome da tarefa.')\n        return\n      }\n      onAdd({text, day, reminder})\n      setText('')\n      setDay('')\n      setReminder(false)\n    }\n\n    return (\n      <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n              <label>Tarefa</label>\n              <input\n                type='text'\n                placeholder='Nome da tarefa'\n                value={text}\n                onChange={(e)=> setText(e.target.value)}\n              />\n            </div>\n            <div className='form-control'>\n              <label>Data de hora</label>\n              <input\n                type='text'\n                placeholder='Horario da tarefa'\n                value={day}\n                onChange={(e)=> setDay(e.target.value)}\n              />\n            </div>\n            <div className='form-control form-control-check'>\n              <label>Criar lembrete</label>\n              <input\n                type='checkbox'\n                checked={reminder}\n                value={reminder}\n                onChange={(e)=> setReminder(e.currentTarget.checked)}\n              />\n            </div>\n\n          <input\n            type='submit'\n            value='Salvar tarefa'\n            className='btn btn-block'\n          />\n        </form>\n    )\n}\n\nexport default AddTask\n","import {useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n    const [showAddTask, setShowAddTask] = useState(false)\n    const [tasks, setTasks] = useState([])\n\n    const deleteTask = (id) => {\n        setTasks(tasks.filter((task)=>task.id !== id))\n    }\n\n    const toggleReminder = (id) => {\n      setTasks(\n        tasks.map((task)=>(\n          task.id === id ?\n            {...task, reminder: !task.reminder}:\n            task\n        ))\n      )\n    }\n\n    const addTask = (task) => {\n      const id = Math.floor(Math.random()*10000)\n      setTasks([...tasks, {id, ...task}])\n    }\n\n    const toggleAddTask = () => {\n      setShowAddTask(!showAddTask)\n    }\n\n    return (\n      <div className=\"container\">\n        <Header\n          onAdd={toggleAddTask}\n          showAdd={showAddTask}\n        />\n        {showAddTask && <AddTask onAdd={addTask}/>}\n        { (tasks.length > 0) ?\n          <Tasks\n            tasks={tasks}\n            onDelete={deleteTask}\n            onToggle={toggleReminder}\n          /> :\n          <p className='center'>Nenhuma tarefa salva.</p>\n        }\n      </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}